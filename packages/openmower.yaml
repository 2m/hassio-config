mqtt:
  sensor:
    - state_topic: "openmower/robot_state/json"
      name: "OpenMower Position Accuracy High Freq"
      unique_id: openmower_position_accuracy_high_freq
      device_class: distance
      icon: mdi:ruler
      value_template: "{{ value_json.pose.pos_accuracy | round(3) }}"
      unit_of_measurement: "m"

    - state_topic: "openmower/robot_state/json"
      name: "OpenMower Position Lat High Freq"
      unique_id: openmower_position_lat_high_freq
      icon: mdi:ruler
      value_template: >-
        {# https://stackoverflow.com/a/50506609 #}
        {# https://github.com/Turfjs/turf/issues/635#issuecomment-292011500 #}
        {% set earth = 6371008.8 %}
        {% set m = 1 / ((2 * pi / 360) * earth) %}
        {% set datum_lat = 55.952423 %}
        {% set datum_lon = 23.350276 %}
        {{ datum_lat + (value_json.pose.y * m) }}
      unit_of_measurement: "°"

    - state_topic: "openmower/robot_state/json"
      name: "OpenMower Position Lon High Freq"
      unique_id: openmower_position_lon_high_freq
      icon: mdi:ruler
      value_template: >-
        {# https://stackoverflow.com/a/50506609 #}
        {# https://github.com/Turfjs/turf/issues/635#issuecomment-292011500 #}
        {% set earth = 6371008.8 %}
        {% set m = 1 / ((2 * pi / 360) * earth) %}
        {% set datum_lat = 55.952423 %}
        {% set datum_lon = 23.350276 %}
        {{ datum_lon + (value_json.pose.x * m) / cos(datum_lat * (pi / 180)) }}
      unit_of_measurement: "°"

    - state_topic: "openmower/xbot_driver_gps/xb_pose"
      name: "OpenMower GPS Accuracy High Freq"
      unique_id: openmower_gps_accuracy_high_freq
      device_class: distance
      icon: mdi:ruler
      value_template: "{{ value_json.PositionAccuracy | round(3) }}"
      unit_of_measurement: "m"
      
    - state_topic: "openmower/xbot_driver_gps/xb_pose"
      name: "OpenMower GPS Lat High Freq"
      unique_id: openmower_gps_lat_high_freq
      icon: mdi:ruler
      value_template: >-
        {# https://stackoverflow.com/a/50506609 #}
        {# https://github.com/Turfjs/turf/issues/635#issuecomment-292011500 #}
        {% set earth = 6371008.8 %}
        {% set m = 1 / ((2 * pi / 360) * earth) %}
        {% set datum_lat = 55.952423 %}
        {% set datum_lon = 23.350276 %}
        {{ datum_lat + (value_json.Pose.Pose.Position.Y * m) }}
      unit_of_measurement: "°"

    - state_topic: "openmower/xbot_driver_gps/xb_pose"
      name: "OpenMower GPS Lon High Freq"
      unique_id: openmower_gps_lon_high_freq
      icon: mdi:ruler
      value_template: >-
        {# https://stackoverflow.com/a/50506609 #}
        {# https://github.com/Turfjs/turf/issues/635#issuecomment-292011500 #}
        {% set earth = 6371008.8 %}
        {% set m = 1 / ((2 * pi / 360) * earth) %}
        {% set datum_lat = 55.952423 %}
        {% set datum_lon = 23.350276 %}
        {{ datum_lon + (value_json.Pose.Pose.Position.X * m) / cos(datum_lat * (pi / 180)) }}
      unit_of_measurement: "°"
      
    - state_topic: "openmower/xbot_driver_gps/xb_pose"
      name: "OpenMower GPS Y High Freq"
      unique_id: openmower_gps_y_high_freq
      device_class: distance
      icon: mdi:ruler
      value_template: "{{ value_json.Pose.Pose.Position.Y | round(3) }}"
      unit_of_measurement: "m"

    - state_topic: "openmower/xbot_driver_gps/xb_pose"
      name: "OpenMower GPS X High Freq"
      unique_id: openmower_gps_x_high_freq
      device_class: distance
      icon: mdi:ruler
      value_template: "{{ value_json.Pose.Pose.Position.X | round(3) }}"
      unit_of_measurement: "m"
      
    - state_topic: "openmower/xbot_driver_gps/xb_pose"
      name: "OpenMower GPS Z High Freq"
      unique_id: openmower_gps_z_high_freq
      device_class: distance
      icon: mdi:ruler
      value_template: "{{ value_json.Pose.Pose.Position.Z | round(3) }}"
      unit_of_measurement: "m"
      
    - state_topic: "openmower/xbot_driver_gps/xb_pose"
      name: "OpenMower GPS RTK High Freq"
      unique_id: openmower_gps_rtk_high_freq
      icon: mdi:crosshairs-gps
      value_template: >-
        {% set current_flags = value_json.Flags | int %}
        {% if current_flags == 3 %}
          fixed
        {% elif current_flags == 5 %}
          float
        {% else %}
          unknown
        {% endif %}
        
    - state_topic: "openmower/xbot_driver_gps/xb_pose"
      name: "OpenMower GPS Flags High Freq"
      unique_id: openmower_gps_flags_high_freq
      device_class: distance
      icon: mdi:flag
      value_template: "{{ value_json.Flags | int }}"
      unit_of_measurement: "m"
  
    - state_topic: "openmower/sensors/om_mow_esc_temp/data"
      name: "OpenMower Mower ESC Temperature High Freq"
      unique_id: openmower_mower_esc_temperature_high_freq
      device_class: temperature
      icon: mdi:thermometer
      value_template: "{{ value | round(2) }}"
      unit_of_measurement: "°C"
  
    - state_topic: "openmower/sensors/om_mow_motor_temp/data"
      name: "OpenMower Mower Motor Temperature High Freq"
      unique_id: openmower_mower_motor_temperature_high_freq
      device_class: temperature
      icon: mdi:thermometer
      value_template: "{{ value | round(2) }}"
      unit_of_measurement: "°C"

    - state_topic: "openmower/sensors/om_left_esc_temp/data"
      name: "OpenMower Left ESC Temperature High Freq"
      unique_id: openmower_left_esc_temperature_high_freq
      device_class: temperature
      icon: mdi:thermometer
      value_template: "{{ value | round(2) }}"
      unit_of_measurement: "°C"
  
    - state_topic: "openmower/sensors/om_right_esc_temp/data"
      name: "OpenMower Right ESC Temperature High Freq"
      unique_id: openmower_right_esc_temperature_high_freq
      device_class: temperature
      icon: mdi:thermometer
      value_template: "{{ value | round(2) }}"
      unit_of_measurement: "°C"
  
    - state_topic: "openmower/sensors/om_charge_current/data"
      name: "OpenMower Charge Current High Freq"
      unique_id: openmower_charge_current_hight_freq
      device_class: current
      icon: mdi:current-dc
      value_template: "{{ value | round(2) }}"
      unit_of_measurement: "A"
  
    - state_topic: "openmower/sensors/om_v_battery/data"
      name: "OpenMower Battery Voltage High Freq"
      unique_id: openmower_battery_voltage_high_freq
      device_class: voltage
      icon: mdi:sine-wave
      value_template: "{{ value | round(2) }}"
      unit_of_measurement: "V"

    - state_topic: "openmower/sensors/om_v_charge/data"
      name: "OpenMower Charge Voltage High Freq"
      unique_id: openmower_charge_voltage_high_freq
      device_class: voltage
      icon: mdi:sine-wave
      value_template: "{{ value | round(2) }}"
      unit_of_measurement: "V"
  
    - state_topic: "openmower/robot_state/json"
      name: "OpenMower Battery Percentage High Freq"
      unique_id: openmower_battery_percentage_high_freq
      device_class: battery
      icon: mdi:battery
      value_template: "{{ value_json.battery_percentage | round(2) | float * 100 }}"
      unit_of_measurement: "%"
  
    - state_topic: "openmower/robot_state/json"
      name: "OpenMower State"
      value_template: "{{ value_json.current_state }}"

  binary_sensor:
    - state_topic: "openmower/robot_state/json"
      name: "OpenMower Emergency"
      device_class: safety
      value_template: "{{ value_json.emergency }}"
      payload_on: "1"
      payload_off: "0"
  
    - state_topic: "openmower/robot_state/json"
      name: "OpenMower Charging"
      device_class: battery_charging
      value_template: "{{ value_json.is_charging }}"
      payload_on: "1"
      payload_off: "0"
      
  lawn_mower:
    - name: "OpenMower"
      activity_state_topic: "openmower/robot_state/json"
      activity_value_template: >-
        {% set current_state = value_json.current_state %}
        {% if current_state in ["MOWING", "DOCKING", "UNDOCKING"] %}
          mowing
        {% elif current_state in ["IDLE"] %}
          {{ "docked" if bool(value_json.is_charging) else "paused" }}
        {% else %}
          none
        {% endif %}
      start_mowing_command_topic: "openmower/action"
      start_mowing_command_template: "mower_logic:idle/start_mowing"
      dock_command_topic: "openmower/action"
      dock_command_template: "mower_logic:mowing/abort_mowing"
      pause_command_topic: "openmower/action"
      pause_command_template: "mower_logic:mowing/pause"
      device:
        configuration_url: "http://openmower.2m.lt:4006"
        identifiers: openmower

sensor:
  - platform: filter
    name: "OpenMower Position Accuracy"
    entity_id: sensor.openmower_position_accuracy_high_freq
    filters:
      - filter: time_throttle
        window_size: "00:00:02"
      - filter: range
        upper_bound: 2
  - platform: filter
    name: "OpenMower Mower ESC Temperature"
    entity_id: sensor.openmower_mower_esc_temperature_high_freq
    filters:
      - filter: time_throttle
        window_size: "00:00:02"
  - platform: filter
    name: "OpenMower Mower Motor Temperature"
    entity_id: sensor.openmower_mower_motor_temperature_high_freq
    filters:
      - filter: time_throttle
        window_size: "00:00:02"
  - platform: filter
    name: "OpenMower Left ESC Temperature"
    entity_id: sensor.openmower_left_esc_temperature_high_freq
    filters:
      - filter: time_throttle
        window_size: "00:00:02"
  - platform: filter
    name: "OpenMower Right ESC Temperature"
    entity_id: sensor.openmower_right_esc_temperature_high_freq
    filters:
      - filter: time_throttle
        window_size: "00:00:02"
  - platform: filter
    name: "OpenMower Charge Current"
    entity_id: sensor.openmower_charge_current_high_freq
    filters:
      - filter: time_throttle
        window_size: "00:00:02"
  - platform: filter
    name: "OpenMower Battery Voltage"
    entity_id: sensor.openmower_battery_voltage_high_freq
    filters:
      - filter: time_throttle
        window_size: "00:00:02"
  - platform: filter
    name: "OpenMower Charge Voltage"
    entity_id: sensor.openmower_charge_voltage_high_freq
    filters:
      - filter: time_throttle
        window_size: "00:00:02"
  - platform: filter
    name: "OpenMower Battery Percentage"
    entity_id: sensor.openmower_battery_percentage_high_freq
    filters:
      - filter: time_throttle
        window_size: "00:00:02"
      
command_line:
  - sensor:
      name: "OpenMower RPi CPU Frequency"
      command: "ssh -i /config/.ssh/id_rsa -o StrictHostKeyChecking=no openmower@openmower.local cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq"
      unit_of_measurement: "MHz"
      device_class: frequency
      value_template: "{{ value | multiply(0.001) | round(1) }}"
      scan_interval: 10
      
  - sensor:
      name: "OpenMower RPi CPU Temperature"
      command: "ssh -i /config/.ssh/id_rsa -o StrictHostKeyChecking=no openmower@openmower.local cat /sys/class/thermal/thermal_zone0/temp"
      unit_of_measurement: "°C"
      value_template: "{{ value | multiply(0.001) | round(1) }}"
      scan_interval: 10
      
  - sensor:
      name: "OpenMower RPi WiFi Signal Strength"
      command: "ssh -i /config/.ssh/id_rsa -o StrictHostKeyChecking=no openmower@openmower.local /usr/sbin/iwconfig wlan0 | grep Signal | cut -d= -f3 | cut -d' ' -f1"
      unit_of_measurement: "dBm"
      device_class: signal_strength
      scan_interval: 10
      
shell_command:
  openmower_start_in_area: "ssh -i /config/.ssh/id_rsa -o StrictHostKeyChecking=no openmower@openmower.local sudo podman exec -it openmower /openmower_entrypoint.sh rosservice call /mower_service/start_in_area \\'{area: {{ states.input_select.openmower_start_in_area_select.state }}}\\'"

input_select:
  openmower_start_in_area_select:
    name: "Area to start OpenMower in"
    options:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9